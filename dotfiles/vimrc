set nocompatible

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim-plug

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -k -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
Plug 'junegunn/vim-plug'    " has vim-plug help
" No harm plugins from https://www.vi-improved.org/plugins/
Plug 'https://github.com/tpope/vim-abolish'
Plug 'https://github.com/tpope/vim-characterize'
Plug 'https://github.com/tpope/vim-commentary'
Plug 'https://github.com/justinmk/vim-dirvish'
Plug 'https://github.com/tpope/vim-eunuch'
Plug 'https://github.com/tpope/vim-fugitive'
Plug 'https://github.com/ludovicchabant/vim-gutentags'
Plug 'https://github.com/tommcdo/vim-lion'
Plug 'https://github.com/romainl/vim-qf'
Plug 'https://github.com/romainl/vim-qlist'
Plug 'https://github.com/tpope/vim-repeat'
Plug 'https://github.com/tpope/vim-rsi'
Plug 'https://github.com/tpope/vim-sensible'
Plug 'https://github.com/justinmk/vim-sneak'
Plug 'https://github.com/tpope/vim-speeddating'
Plug 'https://github.com/tpope/vim-surround'
Plug 'https://github.com/wellle/targets.vim'
Plug 'https://github.com/tomtom/ttags_vim'
Plug 'https://github.com/mbbill/undotree'
Plug 'https://github.com/tpope/vim-unimpaired'
Plug 'https://github.com/ajh17/VimCompletesMe'
" Build
Plug 'neomake/neomake'
" Etc
Plug 'https://github.com/editorconfig/editorconfig-vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --no-update-rc' }
Plug 'junegunn/fzf.vim'
Plug 'https://github.com/xtal8/traces.vim'
Plug 'https://github.com/airblade/vim-gitgutter'
Plug 'https://github.com/chaoren/vim-wordmotion'
Plug 'https://github.com/fvictorio/vim-yank-queue'
" Python
Plug 'https://github.com/nvie/vim-flake8'
Plug 'https://github.com/vim-scripts/indentpython.vim'
Plug 'https://github.com/tmhedberg/SimpylFold'
" Visuals
Plug 'https://github.com/rafi/awesome-vim-colorschemes'
Plug 'https://github.com/c9s/colorselector.vim'
Plug 'https://github.com/Konfekt/FastFold'
call plug#end()

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim settings

syntax on
filetype indent plugin on
set encoding=utf-8
set ignorecase
set incsearch
set magic
set nolist
"set nowrap
set number
set ruler
set smarttab
set showcmd
set showmode
set sidescroll=0
set timeoutlen=2000
set undofile
set undodir=~/.vim/undodir
set wrapmargin=0
set wrapscan

" Theme zenburn options:
let g:zenburn_transparent = 1
let g:zenburn_alternate_Visual = 1

" Themes
set t_Co=256
colorscheme jellybeans

" Whitespace
set autoindent    " align the new line indent with the previous line
set expandtab     " insert spaces when hitting TABs
set shiftround    " round indent to multiple of 'shiftwidth'
set shiftwidth=2  " operation >> indents 4 columns; << unindents 4 columns
set softtabstop=2 " insert/delete 4 spaces when hitting a TAB/BACKSPACE
set tabstop=2     " a hard TAB displays as 4 columns
set textwidth=79  " lines longer than 79 columns will be broken

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Shortcuts

" Leaders
let mapleader = ","
let maplocalleader = "\\"

" By https://www.vi-improved.org/recommendations/
nnoremap <leader>a :argadd <c-r>=fnameescape(expand('%:p:h'))<cr>/*<C-d>
nnoremap <leader>b :b <C-d>
nnoremap <leader>e :e **/
nnoremap <leader>g :grep<space>
nnoremap <leader>i :Ilist<space>
nnoremap <leader>j :tjump /
nnoremap <leader>m :make<cr>
nnoremap <leader>q :b#<cr>
nnoremap <leader>t :TTags<space>*<space>*<space>.<cr>

" Completion
inoremap <silent> ;f <C-x><C-f>
inoremap <silent> ;i <C-x><C-i>
inoremap <silent> ;l <C-x><C-l>
inoremap <silent> ;n <C-x><C-n>
inoremap <silent> ;o <C-x><C-o>
inoremap <silent> ;t <C-x><C-]>
inoremap <silent> ;u <C-x><C-u>

" Copy
set pastetoggle=<F2>

" Folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" Nav cd to current file dir
nnoremap <silent> <F3> :lchdir %:p:h<CR>:pwd<CR>

" Nav split panels with vim char motions
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Repeat also on visually selected lines
vnoremap . :norm.<CR>

" Upcase last typed word
inoremap ;wu <esc>viwUea

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ag silversearcher

if executable("ag")
    set grepprg=ag\ --nogroup\ --nocolor\ --ignore-case\ --column
    set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto make dir

function! <SID>AutoMkdir() abort
    let l:dir = expand('<afile>:p:h')
    let l:file = expand('<afile>:t')
    if !isdirectory(l:dir)
        call mkdir(l:dir, 'p')
        silent execute 'bw ' . l:dir . '/' . l:file
        silent execute 'e ' . l:dir . '/' . l:file
    endif
endfunction

augroup AutoMkdir
    autocmd!
    autocmd BufWritePre,FileWritePre,BufNewFile *
        \ call <SID>AutoMkdir()
augroup END

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto open quickfix window
augroup autoquickfix
    autocmd!
    autocmd QuickFixCmdPost [^l]* cwindow
    autocmd QuickFixCmdPost    l* lwindow
augroup END

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Conf for Python files

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Conf for Ruby files

au BufNewFile,BufRead *.erb,*.rb
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Conf for web files

au BufNewFile,BufRead *.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set fileformat=unix

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" GUI (graphical Vim)

if has("gui_running")
  " GUI is running or is about to start.
  set background=dark
  set gfn=Knack\ NF\ 11
  set lines=999 columns=140
endif

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" :H topic will open an 80 columns vertical split

command! -complete=help -nargs=1 H call VerticalHelp(<f-args>)
function! VerticalHelp(topic)
    execute "vertical botright help " . a:topic
    execute "vertical resize 78"
endfunction

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Highlight only the line with focus

augroup highlight_follows_focus
    autocmd!
    autocmd WinEnter * set cursorline
    autocmd WinLeave * set nocursorline
augroup END

augroup highligh_follows_vim
    autocmd!
    autocmd FocusGained * set cursorline
    autocmd FocusLost * set nocursorline
augroup END

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin EditorConfig

let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin Python folding SimpylFold

let g:SimpylFold_docstring_preview = 1

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Whitespace

" BadWhitespace definition:
highlight BadWhitespace ctermbg=red guibg=darkred

" BadWhitespace opening file:
au BufRead,BufNewFile *.py,*.pyw,*.rb,*.c,*.h match BadWhitespace /\s\+$/

" Strip trailing whitespace function
nnoremap <leader>s :call StripTrailingWhitespace()<cr>
function! StripTrailingWhitespace()
  if !&binary && &filetype != 'diff'
    normal mz
    normal Hmy
    %s/\s\+$//e
    normal 'yz<CR>
    normal `z
  endif
endfunction

" """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
